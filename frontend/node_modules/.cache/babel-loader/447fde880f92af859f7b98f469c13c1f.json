{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n/** @jsx jsx */\n\n\nimport { useContext } from \"react\";\nimport { TabContext } from \".\";\nimport { useColorMode } from \"../ColorModeProvider\";\nimport { useTheme } from \"../ThemeProvider\";\nexport var baseProps = {\n  display: \"flex\",\n  cursor: \"pointer\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  transition: \"all 0.2s\",\n  _focus: {\n    zIndex: \"1\",\n    boxShadow: \"outline\"\n  }\n};\nexport var disabledProps = {\n  _disabled: {\n    opacity: 0.4,\n    cursor: \"not-allowed\"\n  }\n};\n\nvar lineStyle = function lineStyle(_ref) {\n  var color = _ref.color,\n      colorMode = _ref.colorMode;\n  var _color = {\n    light: color + \".600\",\n    dark: color + \".300\"\n  };\n  return {\n    tabList: {\n      borderBottom: \"2px\",\n      borderColor: \"inherit\"\n    },\n    tab: {\n      borderBottom: \"2px\",\n      borderColor: \"transparent\",\n      mb: \"-2px\",\n      _selected: {\n        color: _color[colorMode],\n        borderColor: \"currentColor\"\n      },\n      _active: {\n        bg: \"gray.200\"\n      },\n      _disabled: {\n        opacity: 0.4,\n        cursor: \"not-allowed\"\n      }\n    }\n  };\n}; // TODO: Create new issue in @styled-system/css to allow custom alias\n\n\nvar enclosedStyle = function enclosedStyle(_ref2) {\n  var color = _ref2.color,\n      colorMode = _ref2.colorMode,\n      theme = _ref2.theme;\n  var _selectedColor = {\n    light: color + \".600\",\n    dark: color + \".300\"\n  };\n  var _selectedBg = {\n    light: \"#fff\",\n    dark: theme.colors.gray[800]\n  };\n  return {\n    tab: {\n      roundedTop: \"md\",\n      border: \"1px\",\n      borderColor: \"transparent\",\n      mb: \"-1px\",\n      _selected: {\n        color: _selectedColor[colorMode],\n        borderColor: \"inherit\",\n        borderBottomColor: _selectedBg[colorMode]\n      }\n    },\n    tabList: {\n      mb: \"-1px\",\n      borderBottom: \"1px\",\n      borderColor: \"inherit\"\n    }\n  };\n};\n\nvar enclosedColoredStyle = function enclosedColoredStyle(_ref3) {\n  var color = _ref3.color,\n      colorMode = _ref3.colorMode;\n  var bg = {\n    light: \"gray.50\",\n    dark: \"whiteAlpha.50\"\n  };\n  var _selectedColor = {\n    light: color + \".600\",\n    dark: color + \".300\"\n  };\n  var _selectedBg = {\n    light: \"#fff\",\n    dark: \"gray.800\"\n  };\n  return {\n    tab: {\n      border: \"1px\",\n      borderColor: \"inherit\",\n      bg: bg[colorMode],\n      mb: \"-1px\",\n      _notLast: {\n        mr: \"-1px\"\n      },\n      _selected: {\n        bg: _selectedBg[colorMode],\n        color: _selectedColor[colorMode],\n        borderColor: \"inherit\",\n        borderTopColor: \"currentColor\",\n        borderBottomColor: \"transparent\"\n      }\n    },\n    tabList: {\n      mb: \"-1px\",\n      borderBottom: \"1px\",\n      borderColor: \"inherit\"\n    }\n  };\n};\n\nvar softRoundedStyle = function softRoundedStyle(_ref4) {\n  var color = _ref4.color;\n  return {\n    tab: {\n      rounded: \"full\",\n      fontWeight: \"semibold\",\n      color: \"gray.600\",\n      _selected: {\n        color: color + \".700\",\n        bg: color + \".100\"\n      }\n    },\n    tabList: {}\n  };\n};\n\nvar solidRoundedStyle = function solidRoundedStyle(_ref5) {\n  var color = _ref5.color,\n      colorMode = _ref5.colorMode;\n  var _color = {\n    light: \"gray.600\",\n    dark: \"inherit\"\n  };\n  var _selectedBg = {\n    light: color + \".600\",\n    dark: color + \".300\"\n  };\n  var _selectedColor = {\n    light: \"#fff\",\n    dark: \"gray.800\"\n  };\n  return {\n    tab: {\n      rounded: \"full\",\n      fontWeight: \"semibold\",\n      color: _color[colorMode],\n      _selected: {\n        color: _selectedColor[colorMode],\n        bg: _selectedBg[colorMode]\n      }\n    },\n    tabList: {}\n  };\n};\n\nexport var variantStyle = function variantStyle(props) {\n  switch (props.variant) {\n    case \"line\":\n      return lineStyle(props);\n\n    case \"enclosed\":\n      return enclosedStyle(props);\n\n    case \"enclosed-colored\":\n      return enclosedColoredStyle(props);\n\n    case \"soft-rounded\":\n      return softRoundedStyle(props);\n\n    case \"solid-rounded\":\n      return solidRoundedStyle(props);\n\n    case \"unstyled\":\n      return {};\n\n    default:\n      break;\n  }\n}; // TO DO: Add support for vertical orientation\n\nexport var orientationStyle = function orientationStyle(_ref6) {\n  var align = _ref6.align,\n      orientation = _ref6.orientation;\n  var alignments = {\n    end: \"flex-end\",\n    center: \"center\",\n    start: \"flex-start\"\n  };\n  var tabListStyle;\n  var tabStyle;\n\n  if (orientation === \"horizontal\") {\n    tabListStyle = {\n      alignItems: \"center\",\n      justifyContent: alignments[align],\n      maxWidth: \"full\"\n    };\n    tabStyle = {\n      height: \"100%\"\n    };\n  }\n\n  if (orientation === \"vertical\") {\n    tabListStyle = {\n      flexDirection: \"column\"\n    };\n    tabStyle = {\n      width: \"100%\"\n    };\n  }\n\n  return {\n    tabList: tabListStyle,\n    tab: tabStyle\n  };\n};\nvar tabSizes = {\n  sm: {\n    padding: \"0.25rem 1rem\",\n    fontSize: \"0.85rem\"\n  },\n  md: {\n    fontSize: \"1rem\",\n    padding: \"0.5rem 1rem\"\n  },\n  lg: {\n    fontSize: \"1.15rem\",\n    padding: \"0.75rem 1rem\"\n  }\n};\nexport var useTabStyle = function useTabStyle() {\n  var theme = useTheme();\n\n  var _useContext = useContext(TabContext),\n      variant = _useContext.variant,\n      color = _useContext.color,\n      size = _useContext.size,\n      isFitted = _useContext.isFitted,\n      orientation = _useContext.orientation;\n\n  var _useColorMode = useColorMode(),\n      colorMode = _useColorMode.colorMode;\n\n  var _variantStyle = variantStyle({\n    variant: variant,\n    color: color,\n    theme: theme,\n    colorMode: colorMode\n  });\n\n  var _orientationStyle = orientationStyle({\n    orientation: orientation\n  });\n\n  return _objectSpread({}, baseProps, {}, disabledProps, {}, tabSizes[size], {}, _variantStyle && _variantStyle.tab, {}, _orientationStyle && _orientationStyle.tab, {}, isFitted && {\n    flex: 1\n  });\n};\nexport var useTabListStyle = function useTabListStyle() {\n  var theme = useTheme();\n\n  var _useContext2 = useContext(TabContext),\n      variant = _useContext2.variant,\n      align = _useContext2.align,\n      orientation = _useContext2.orientation;\n\n  var _variantStyle = variantStyle({\n    variant: variant,\n    theme: theme\n  });\n\n  var _orientationStyle = orientationStyle({\n    align: align,\n    orientation: orientation\n  });\n\n  return _objectSpread({}, _variantStyle && _variantStyle.tabList, {}, _orientationStyle && _orientationStyle.tabList);\n};","map":null,"metadata":{},"sourceType":"module"}