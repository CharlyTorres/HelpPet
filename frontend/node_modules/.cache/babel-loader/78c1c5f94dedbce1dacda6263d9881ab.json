{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n    [x-arrow] {\\n      width: \", \";\\n      height: \", \";\\n      position: absolute;\\n      transform: rotate(45deg);\\n\\n      &::before {\\n        content: \\\"\\\";\\n        width: \", \";\\n        height: \", \";\\n        position: absolute;\\n        z-index: -1;\\n      }\\n    }\\n\\n    &[x-placement^=\\\"top\\\"] {\\n      margin-bottom: \", \";\\n      transform-origin: bottom center;\\n    }\\n\\n    &[x-placement^=\\\"top\\\"] [x-arrow] {\\n      bottom: \", \";\\n\\n      &::before {\\n        box-shadow: 2px 2px 2px 0 \", \";\\n      }\\n    }\\n\\n    &[x-placement^=\\\"bottom\\\"] {\\n      margin-top: \", \";\\n      transform-origin: top center;\\n    }\\n\\n    &[x-placement^=\\\"bottom\\\"] [x-arrow] {\\n      top: \", \";\\n\\n      &::before {\\n        box-shadow: -1px -1px 1px 0 \", \";\\n      }\\n    }\\n\\n    &[x-placement^=\\\"right\\\"] {\\n      margin-left: \", \";\\n      transform-origin: left center;\\n    }\\n\\n    &[x-placement^=\\\"right\\\"] [x-arrow] {\\n      left: \", \";\\n\\n      &::before {\\n        box-shadow: -1px 1px 1px 0 \", \";\\n      }\\n    }\\n\\n    &[x-placement^=\\\"left\\\"] {\\n      margin-right: \", \";\\n      transform-origin: right center;\\n    }\\n\\n    &[x-placement^=\\\"left\\\"] [x-arrow] {\\n      right: \", \";\\n      &::before {\\n        box-shadow: 1px -1px 1px 0 \", \";\\n      }\\n    }\\n  \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { css } from \"@emotion/core\";\n\nvar getPopperArrowStyle = function getPopperArrowStyle(_ref) {\n  var _ref$arrowSize = _ref.arrowSize,\n      arrowSize = _ref$arrowSize === void 0 ? \"1rem\" : _ref$arrowSize,\n      _ref$arrowShadowColor = _ref.arrowShadowColor,\n      arrowShadowColor = _ref$arrowShadowColor === void 0 ? \"rgba(0, 0, 0, 0.1)\" : _ref$arrowShadowColor,\n      _ref$hasArrow = _ref.hasArrow,\n      hasArrow = _ref$hasArrow === void 0 ? true : _ref$hasArrow;\n  var popoverMargin = hasArrow ? \"calc(\" + arrowSize + \" / 2)\" : null;\n  var arrowPos = \"calc(\" + arrowSize + \" / 2 * -1)\";\n  return css(_templateObject(), arrowSize, arrowSize, arrowSize, arrowSize, popoverMargin, arrowPos, arrowShadowColor, popoverMargin, arrowPos, arrowShadowColor, popoverMargin, arrowPos, arrowShadowColor, popoverMargin, arrowPos, arrowShadowColor);\n};\n\nexport default getPopperArrowStyle;","map":null,"metadata":{},"sourceType":"module"}