{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\n/** @jsx jsx */\n\nimport { jsx } from \"@emotion/core\";\nimport { forwardRef } from \"react\";\nimport { useFormControl } from \"../FormControl\";\nimport PseudoBox from \"../PseudoBox\";\nimport useInputStyle from \"./styles\";\nvar Input = forwardRef(function (props, ref) {\n  var size = props.size,\n      variant = props.variant,\n      as = props.as,\n      ariaLabel = props[\"aria-label\"],\n      ariaDescribedby = props[\"aria-describedby\"],\n      isReadOnly = props.isReadOnly,\n      isFullWidth = props.isFullWidth,\n      isDisabled = props.isDisabled,\n      isInvalid = props.isInvalid,\n      isRequired = props.isRequired,\n      focusBorderColor = props.focusBorderColor,\n      errorBorderColor = props.errorBorderColor,\n      rest = _objectWithoutPropertiesLoose(props, [\"size\", \"variant\", \"as\", \"aria-label\", \"aria-describedby\", \"isReadOnly\", \"isFullWidth\", \"isDisabled\", \"isInvalid\", \"isRequired\", \"focusBorderColor\", \"errorBorderColor\"]);\n\n  var inputStyleProps = useInputStyle(props);\n  var formControl = useFormControl(props);\n  return jsx(PseudoBox, _extends({\n    ref: ref,\n    as: as,\n    readOnly: formControl.isReadOnly,\n    \"aria-readonly\": isReadOnly,\n    disabled: formControl.isDisabled,\n    \"aria-label\": ariaLabel,\n    \"aria-invalid\": formControl.isInvalid,\n    required: formControl.isRequired,\n    \"aria-required\": formControl.isRequired,\n    \"aria-disabled\": formControl.isDisabled,\n    \"aria-describedby\": ariaDescribedby\n  }, inputStyleProps, rest));\n});\nInput.displayName = \"Input\";\nInput.defaultProps = {\n  size: \"md\",\n  as: \"input\",\n  variant: \"outline\",\n  isFullWidth: true,\n  focusBorderColor: \"blue.500\",\n  errorBorderColor: \"red.500\"\n};\nexport default Input;","map":null,"metadata":{},"sourceType":"module"}