{"ast":null,"code":"import e from \"@use-it/event-listener\";\nimport { useState as t, useEffect as r, useCallback as n, useMemo as a } from \"react\";\nimport o from \"use-persisted-state\";\n\nvar i = function () {},\n    u = {\n  classList: {\n    add: i,\n    remove: i\n  }\n},\n    d = function (e, r, n) {\n  void 0 === n && (n = global);\n  var a = e ? o(e, r) : t,\n      i = n.matchMedia ? n.matchMedia(\"(prefers-color-scheme: dark)\") : {},\n      d = {\n    addEventListener: function (e, t) {\n      return i.addListener && i.addListener(t);\n    },\n    removeEventListener: function (e, t) {\n      return i.removeListener && i.removeListener(t);\n    }\n  },\n      s = \"(prefers-color-scheme: dark)\" === i.media,\n      c = n.document && n.document.body || u;\n  return {\n    usePersistedDarkModeState: a,\n    getDefaultOnChange: function (e, t, r) {\n      return void 0 === e && (e = c), void 0 === t && (t = \"dark-mode\"), void 0 === r && (r = \"light-mode\"), function (n) {\n        e.classList.add(n ? t : r), e.classList.remove(n ? r : t);\n      };\n    },\n    mediaQueryEventTarget: d,\n    getInitialValue: function (e) {\n      return s ? i.matches : e;\n    }\n  };\n};\n\nexport default function (t, o) {\n  void 0 === t && (t = !1), void 0 === o && (o = {});\n  var i = o.element,\n      u = o.classNameDark,\n      s = o.classNameLight,\n      c = o.onChange,\n      m = o.storageKey;\n  void 0 === m && (m = \"darkMode\");\n  var l = o.storageProvider,\n      f = o.global,\n      v = a(function () {\n    return d(m, l, f);\n  }, [m, l, f]),\n      g = v.getDefaultOnChange,\n      h = v.mediaQueryEventTarget,\n      L = (0, v.usePersistedDarkModeState)((0, v.getInitialValue)(t)),\n      k = L[0],\n      p = L[1],\n      b = a(function () {\n    return c || g(i, u, s);\n  }, [c, i, u, s, g]);\n  return r(function () {\n    b(k);\n  }, [b, k]), e(\"change\", function (e) {\n    return p(e.matches);\n  }, h), {\n    value: k,\n    enable: n(function () {\n      return p(!0);\n    }, [p]),\n    disable: n(function () {\n      return p(!1);\n    }, [p]),\n    toggle: n(function () {\n      return p(function (e) {\n        return !e;\n      });\n    }, [p])\n  };\n}","map":null,"metadata":{},"sourceType":"module"}