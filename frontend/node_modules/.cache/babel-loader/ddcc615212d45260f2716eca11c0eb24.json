{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport { addOpacity, generateAlphaColors, get } from \"../theme/colors-utils\";\nimport { useTheme } from \"../ThemeProvider\";\nimport { useColorMode } from \"../ColorModeProvider\";\n\nvar solidStyle = function solidStyle(_ref) {\n  var colors = _ref.theme.colors,\n      color = _ref.color;\n\n  var _color = colors[color] && colors[color][500];\n\n  var darkModeBg = addOpacity(_color, 0.6);\n  return {\n    light: {\n      bg: get(color, 500),\n      color: \"white\"\n    },\n    dark: {\n      bg: darkModeBg,\n      color: \"whiteAlpha.800\"\n    }\n  };\n};\n\nvar subtleStyle = function subtleStyle(_ref2) {\n  var colors = _ref2.theme.colors,\n      color = _ref2.color;\n\n  var _color = colors[color] && colors[color][200];\n\n  var alphaColors = generateAlphaColors(_color);\n  var darkModeBg = alphaColors[300];\n  return {\n    light: {\n      bg: get(color, 100),\n      color: get(color, 800)\n    },\n    dark: {\n      bg: darkModeBg,\n      color: get(color, 200)\n    }\n  };\n};\n\nvar outlineStyle = function outlineStyle(_ref3) {\n  var colors = _ref3.theme.colors,\n      color = _ref3.color;\n\n  var _color = colors[color] && colors[color][200];\n\n  var darkModeColor = addOpacity(_color, 0.8);\n  var boxShadowColor = colors[color] && colors[color][500];\n  return {\n    light: {\n      boxShadow: \"inset 0 0 0px 1px \" + boxShadowColor,\n      color: get(color, 500)\n    },\n    dark: {\n      boxShadow: \"inset 0 0 0px 1px \" + darkModeColor,\n      color: darkModeColor\n    }\n  };\n};\n\nvar variantProps = function variantProps(props) {\n  var variant = props.variant,\n      colorMode = props.colorMode;\n\n  switch (variant) {\n    case \"solid\":\n      return solidStyle(props)[colorMode];\n\n    case \"subtle\":\n      return subtleStyle(props)[colorMode];\n\n    case \"outline\":\n      return outlineStyle(props)[colorMode];\n\n    default:\n      return {};\n  }\n};\n\nvar useBadgeStyle = function useBadgeStyle(props) {\n  var theme = useTheme();\n\n  var _useColorMode = useColorMode(),\n      colorMode = _useColorMode.colorMode;\n\n  var _props = _objectSpread({}, props, {\n    theme: theme,\n    colorMode: colorMode\n  });\n\n  return variantProps(_props);\n};\n\nexport default useBadgeStyle;","map":null,"metadata":{},"sourceType":"module"}