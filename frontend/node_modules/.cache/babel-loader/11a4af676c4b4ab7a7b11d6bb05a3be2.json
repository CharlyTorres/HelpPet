{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\n/** @jsx jsx */\n\nimport { jsx } from \"@emotion/core\";\nimport Icon from \"../Icon\";\nimport PseudoBox from \"../PseudoBox\";\nimport { useColorMode } from \"../ColorModeProvider\";\nvar baseProps = {\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  rounded: \"md\",\n  transition: \"all 0.2s\",\n  flex: \"0 0 auto\",\n  _hover: {\n    bg: \"blackAlpha.100\"\n  },\n  _active: {\n    bg: \"blackAlpha.200\"\n  },\n  _disabled: {\n    cursor: \"not-allowed\"\n  },\n  _focus: {\n    boxShadow: \"outline\"\n  }\n};\nvar sizes = {\n  lg: {\n    button: \"40px\",\n    icon: \"16px\"\n  },\n  md: {\n    button: \"32px\",\n    icon: \"12px\"\n  },\n  sm: {\n    button: \"24px\",\n    icon: \"10px\"\n  }\n};\n\nvar CloseButton = function CloseButton(_ref) {\n  var _ref$size = _ref.size,\n      size = _ref$size === void 0 ? \"md\" : _ref$size,\n      isDisabled = _ref.isDisabled,\n      color = _ref.color,\n      _ref$ariaLabel = _ref[\"aria-label\"],\n      ariaLabel = _ref$ariaLabel === void 0 ? \"Close\" : _ref$ariaLabel,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"size\", \"isDisabled\", \"color\", \"aria-label\"]);\n\n  var _useColorMode = useColorMode(),\n      colorMode = _useColorMode.colorMode;\n\n  var hoverColor = {\n    light: \"blackAlpha.100\",\n    dark: \"whiteAlpha.100\"\n  };\n  var activeColor = {\n    light: \"blackAlpha.200\",\n    dark: \"whiteAlpha.200\"\n  };\n  var buttonSize = sizes[size] && sizes[size][\"button\"];\n  var iconSize = sizes[size] && sizes[size][\"icon\"];\n  return jsx(PseudoBox, _extends({\n    as: \"button\",\n    outline: \"none\",\n    \"aria-disabled\": isDisabled,\n    disabled: isDisabled,\n    \"aria-label\": ariaLabel,\n    size: buttonSize,\n    _hover: {\n      bg: hoverColor[colorMode]\n    },\n    _active: {\n      bg: activeColor[colorMode]\n    }\n  }, baseProps, rest), jsx(Icon, {\n    color: color,\n    focusable: \"false\",\n    name: \"close\",\n    \"aria-hidden\": true,\n    size: iconSize\n  }));\n};\n\nexport default CloseButton;","map":null,"metadata":{},"sourceType":"module"}