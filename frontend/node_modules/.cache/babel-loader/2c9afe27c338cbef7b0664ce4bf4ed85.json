{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n/** @jsx jsx */\n\n\nimport { jsx } from \"@emotion/core\";\nimport Box from \"../Box\";\nimport useInputStyle from \"../Input/styles\";\nimport { useColorMode } from \"../ColorModeProvider\";\n\nvar InputAddon = function InputAddon(_ref) {\n  var _ref$placement = _ref.placement,\n      placement = _ref$placement === void 0 ? \"left\" : _ref$placement,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? \"md\" : _ref$size,\n      props = _objectWithoutPropertiesLoose(_ref, [\"placement\", \"size\"]);\n\n  var _useColorMode = useColorMode(),\n      colorMode = _useColorMode.colorMode;\n\n  var bg = {\n    dark: \"whiteAlpha.300\",\n    light: \"gray.100\"\n  };\n  var _placement = {\n    left: {\n      mr: \"-1px\",\n      roundedRight: 0,\n      borderRightColor: \"transparent\"\n    },\n    right: {\n      order: 1,\n      roundedLeft: 0,\n      borderLeftColor: \"transparent\"\n    }\n  };\n\n  var styleProps = _objectSpread({}, useInputStyle({\n    size: size,\n    variant: \"outline\"\n  }), {\n    flex: \"0 0 auto\",\n    whiteSpace: \"nowrap\",\n    bg: bg[colorMode]\n  }, _placement[placement]);\n\n  return jsx(Box, _extends({}, styleProps, props, {\n    css: {\n      \"input:focus + &\": {\n        zIndex: -1\n      }\n    }\n  }));\n};\n\nvar InputLeftAddon = function InputLeftAddon(props) {\n  return jsx(InputAddon, _extends({\n    placement: \"left\"\n  }, props));\n};\n\nvar InputRightAddon = function InputRightAddon(props) {\n  return jsx(InputAddon, _extends({\n    placement: \"right\"\n  }, props));\n};\n\nexport { InputLeftAddon, InputRightAddon };\nexport default InputAddon;","map":null,"metadata":{},"sourceType":"module"}