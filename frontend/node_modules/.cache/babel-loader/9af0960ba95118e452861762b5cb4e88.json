{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\n/** @jsx jsx */\n\nimport { jsx } from \"@emotion/core\";\nimport { Children, cloneElement, forwardRef, isValidElement } from \"react\";\nimport Box from \"../Box\";\nimport Link from \"../Link\";\nvar BreadcrumbSeparator = forwardRef(function (_ref, ref) {\n  var spacing = _ref.spacing,\n      props = _objectWithoutPropertiesLoose(_ref, [\"spacing\"]);\n\n  return jsx(Box, _extends({\n    ref: ref,\n    role: \"presentation\",\n    as: \"span\",\n    mx: spacing\n  }, props));\n});\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\";\nvar Span = forwardRef(function (props, ref) {\n  return jsx(Box, _extends({\n    ref: ref,\n    as: \"span\"\n  }, props));\n});\nvar BreadcrumbLink = forwardRef(function (_ref2, ref) {\n  var isCurrentPage = _ref2.isCurrentPage,\n      props = _objectWithoutPropertiesLoose(_ref2, [\"isCurrentPage\"]);\n\n  var Comp = isCurrentPage ? Span : Link;\n  return jsx(Comp, _extends({\n    ref: ref,\n    \"aria-current\": isCurrentPage ? \"page\" : null\n  }, props));\n});\nBreadcrumbLink.displayName = \"BreadcrumbLink\";\n\nvar BreadcrumbItem = function BreadcrumbItem(_ref3) {\n  var isCurrentPage = _ref3.isCurrentPage,\n      separator = _ref3.separator,\n      isLastChild = _ref3.isLastChild,\n      addSeparator = _ref3.addSeparator,\n      spacing = _ref3.spacing,\n      children = _ref3.children,\n      rest = _objectWithoutPropertiesLoose(_ref3, [\"isCurrentPage\", \"separator\", \"isLastChild\", \"addSeparator\", \"spacing\", \"children\"]);\n\n  var clones = Children.map(children, function (child) {\n    if (!isValidElement(child)) return;\n\n    if (child.type === BreadcrumbLink) {\n      return cloneElement(child, {\n        isCurrentPage: isCurrentPage\n      });\n    }\n\n    if (child.type === BreadcrumbSeparator) {\n      return cloneElement(child, {\n        spacing: spacing,\n        children: child.props.children || separator\n      });\n    }\n\n    return child;\n  });\n  return jsx(Box, _extends({\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    as: \"li\"\n  }, rest), clones, !isLastChild && addSeparator && jsx(BreadcrumbSeparator, {\n    spacing: spacing,\n    children: separator\n  }));\n};\n\nvar Breadcrumb = function Breadcrumb(_ref4) {\n  var children = _ref4.children,\n      _ref4$spacing = _ref4.spacing,\n      spacing = _ref4$spacing === void 0 ? 2 : _ref4$spacing,\n      _ref4$addSeparator = _ref4.addSeparator,\n      addSeparator = _ref4$addSeparator === void 0 ? true : _ref4$addSeparator,\n      _ref4$separator = _ref4.separator,\n      separator = _ref4$separator === void 0 ? \"/\" : _ref4$separator,\n      rest = _objectWithoutPropertiesLoose(_ref4, [\"children\", \"spacing\", \"addSeparator\", \"separator\"]);\n\n  var clones = Children.map(children, function (child, index) {\n    if (!isValidElement(child)) return;\n    return cloneElement(child, {\n      addSeparator: addSeparator,\n      separator: separator,\n      spacing: spacing,\n      isLastChild: Children.count(children) === index + 1\n    });\n  });\n  return jsx(Box, _extends({\n    as: \"nav\",\n    \"aria-label\": \"breadcrumb\"\n  }, rest), jsx(Box, {\n    as: \"ol\"\n  }, clones));\n};\n\nexport default Breadcrumb;\nexport { BreadcrumbLink, BreadcrumbItem, BreadcrumbSeparator };","map":null,"metadata":{},"sourceType":"module"}