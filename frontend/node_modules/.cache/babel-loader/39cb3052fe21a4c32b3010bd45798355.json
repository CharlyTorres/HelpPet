{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/extends\";\n/** @jsx jsx */\n\nimport { jsx } from \"@emotion/core\";\nimport { forwardRef } from \"react\";\nimport Input from \"../Input\";\nimport { useColorMode } from \"../ColorModeProvider\";\nimport Box from \"../Box\";\nimport splitProps from \"./utils\";\nimport Icon from \"../Icon/custom\";\nvar SelectIconWrapper = forwardRef(function SelectIconWrapper(props, ref) {\n  return jsx(Box, _extends({\n    ref: ref,\n    position: \"absolute\",\n    display: \"inline-flex\",\n    width: \"1.5rem\",\n    height: \"100%\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    right: \"0.5rem\",\n    top: \"50%\",\n    pointerEvents: \"none\",\n    zIndex: 2,\n    transform: \"translateY(-50%)\"\n  }, props));\n});\nvar SelectInput = forwardRef(function SelectInput(_ref, ref) {\n  var placeholder = _ref.placeholder,\n      children = _ref.children,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"placeholder\", \"children\"]);\n\n  return jsx(Input, _extends({\n    as: \"select\",\n    appearance: \"none\",\n    ref: ref,\n    pr: \"2rem\",\n    pb: \"px\",\n    lineHeight: \"normal\"\n  }, rest), placeholder && jsx(\"option\", {\n    value: \"\"\n  }, placeholder), children);\n});\nvar Select = forwardRef(function (_ref2, ref) {\n  var rootProps = _ref2.rootProps,\n      icon = _ref2.icon,\n      _ref2$iconSize = _ref2.iconSize,\n      iconSize = _ref2$iconSize === void 0 ? 5 : _ref2$iconSize,\n      props = _objectWithoutPropertiesLoose(_ref2, [\"rootProps\", \"icon\", \"iconSize\"]);\n\n  var _useColorMode = useColorMode(),\n      colorMode = _useColorMode.colorMode;\n\n  var color = colorMode === \"dark\" ? \"whiteAlpha.800\" : \"inherit\";\n  var opacity = props.isReadOnly || props.isDisabled ? 0.5 : null;\n\n  var _splitProps = splitProps(props),\n      root = _splitProps[0],\n      select = _splitProps[1];\n\n  return jsx(Box, _extends({\n    position: \"relative\",\n    width: \"100%\"\n  }, root, rootProps), jsx(SelectInput, _extends({\n    ref: ref,\n    color: color\n  }, select)), jsx(SelectIconWrapper, {\n    opacity: opacity,\n    color: select.color || color\n  }, jsx(Icon, {\n    icon: icon || \"chevron-down\",\n    size: iconSize\n  })));\n});\nSelect.displayName = \"Select\";\nexport default Select;","map":null,"metadata":{},"sourceType":"module"}