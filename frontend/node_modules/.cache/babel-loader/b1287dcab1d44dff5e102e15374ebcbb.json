{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\n/** @jsx jsx */\n\nimport { jsx } from \"@emotion/core\";\nimport useBadgeStyle from \"./styles\";\nimport Box from \"../Box\";\nimport { forwardRef } from \"react\";\nimport { useVariantColorWarning } from \"../utils\";\nvar Badge = forwardRef(function (_ref, ref) {\n  var _ref$variantColor = _ref.variantColor,\n      variantColor = _ref$variantColor === void 0 ? \"gray\" : _ref$variantColor,\n      _ref$variant = _ref.variant,\n      variant = _ref$variant === void 0 ? \"subtle\" : _ref$variant,\n      props = _objectWithoutPropertiesLoose(_ref, [\"variantColor\", \"variant\"]); // Wrong usage of `variantColor` prop is quite common\n  // Let's add a warning hook that validates the passed variantColor\n\n\n  useVariantColorWarning(\"Badge\", variantColor);\n  var badgeStyleProps = useBadgeStyle({\n    color: variantColor,\n    variant: variant\n  });\n  return jsx(Box, _extends({\n    ref: ref,\n    display: \"inline-block\",\n    px: 1,\n    textTransform: \"uppercase\",\n    fontSize: \"xs\",\n    borderRadius: \"sm\",\n    fontWeight: \"bold\",\n    whiteSpace: \"nowrap\",\n    verticalAlign: \"middle\"\n  }, badgeStyleProps, props));\n});\nBadge.displayName = \"Badge\";\nexport default Badge;","map":null,"metadata":{},"sourceType":"module"}