{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\n/** @jsx jsx */\n\nimport { jsx } from \"@emotion/core\";\nimport toaster from \"toasted-notes\";\nimport { Alert, AlertIcon, AlertTitle, AlertDescription } from \"../Alert\";\nimport ThemeProvider, { useTheme } from \"../ThemeProvider\";\nimport Box from \"../Box\";\nimport CloseButton from \"../CloseButton\";\n\nvar Toast = function Toast(_ref) {\n  var status = _ref.status,\n      variant = _ref.variant,\n      id = _ref.id,\n      title = _ref.title,\n      isClosable = _ref.isClosable,\n      onClose = _ref.onClose,\n      description = _ref.description,\n      props = _objectWithoutPropertiesLoose(_ref, [\"status\", \"variant\", \"id\", \"title\", \"isClosable\", \"onClose\", \"description\"]);\n\n  return jsx(Alert, _extends({\n    status: status,\n    variant: variant,\n    id: id,\n    textAlign: \"left\",\n    boxShadow: \"lg\",\n    rounded: \"md\",\n    alignItems: \"start\",\n    m: 2,\n    pr: 8\n  }, props), jsx(AlertIcon, null), jsx(Box, {\n    flex: \"1\"\n  }, title && jsx(AlertTitle, null, title), description && jsx(AlertDescription, null, description)), isClosable && jsx(CloseButton, {\n    size: \"sm\",\n    onClick: onClose,\n    position: \"absolute\",\n    right: \"4px\",\n    top: \"4px\"\n  }));\n};\n\nfunction useToast() {\n  var theme = useTheme();\n\n  function notify(_ref2) {\n    var _ref2$position = _ref2.position,\n        position = _ref2$position === void 0 ? \"bottom\" : _ref2$position,\n        _ref2$duration = _ref2.duration,\n        duration = _ref2$duration === void 0 ? 5000 : _ref2$duration,\n        render = _ref2.render,\n        title = _ref2.title,\n        description = _ref2.description,\n        status = _ref2.status,\n        _ref2$variant = _ref2.variant,\n        variant = _ref2$variant === void 0 ? \"solid\" : _ref2$variant,\n        isClosable = _ref2.isClosable;\n    var options = {\n      position: position,\n      duration: duration\n    };\n\n    if (render) {\n      return toaster.notify(function (_ref3) {\n        var onClose = _ref3.onClose,\n            id = _ref3.id;\n        return jsx(ThemeProvider, {\n          theme: theme\n        }, render({\n          onClose: onClose,\n          id: id\n        }));\n      }, options);\n    }\n\n    toaster.notify(function (_ref4) {\n      var onClose = _ref4.onClose,\n          id = _ref4.id;\n      return jsx(ThemeProvider, {\n        theme: theme\n      }, jsx(Toast, {\n        onClose: onClose,\n        id: id,\n        title: title,\n        description: description,\n        status: status,\n        variant: variant,\n        isClosable: isClosable\n      }));\n    }, options);\n  }\n\n  return notify;\n}\n\nexport default useToast;","map":null,"metadata":{},"sourceType":"module"}